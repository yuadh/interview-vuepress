(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{365:function(s,e,a){"use strict";a.r(e);var n=a(4),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"组件生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件生命周期"}},[s._v("#")]),s._v(" 组件生命周期")]),s._v(" "),e("ul",[e("li",[s._v("说出组件生命周期对应的钩子函数")]),s._v(" "),e("li",[s._v("钩子函数调用的时机")])]),s._v(" "),e("p",[s._v("意义：组件的生命周期有助于理解组件的运行方式，完成更复杂的组件功能、分析组件错误原因等")]),s._v(" "),e("p",[s._v("组件的生命周期： 组件从被创建到挂载到页面中运行，再到组件不在时卸载的过程")]),s._v(" "),e("p",[s._v("生命周期的每个阶段总是伴随着一些方法调用，这些方法就是生命周期的钩子函数")]),s._v(" "),e("p",[s._v("构造函数的作用：为开发人员在不同阶段操作组件提供了实际")]),s._v(" "),e("p",[e("img",{attrs:{src:"http://img.yuadh.com/imgs/2022/12/01/1669899376711.png",alt:"1669899376711.png"}})]),s._v(" "),e("h3",{attrs:{id:"创建时-挂载阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建时-挂载阶段"}},[s._v("#")]),s._v(" 创建时（挂载阶段）")]),s._v(" "),e("ul",[e("li",[s._v("执行时机：组件创建时（页面加载时）")]),s._v(" "),e("li",[s._v("执行顺序")])]),s._v(" "),e("p",[e("img",{attrs:{src:"http://img.yuadh.com/imgs/2022/12/01/1669900082257.png",alt:"1669900082257.png"}})]),s._v(" "),e("h3",{attrs:{id:"更新时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新时"}},[s._v("#")]),s._v(" 更新时")]),s._v(" "),e("p",[s._v("执行时机："),e("code",[s._v("setState()、 forceUpdate()、 组件接收到新的props")])]),s._v(" "),e("p",[s._v("说明：以上三者任意一种变化，组件就会重新渲染")]),s._v(" "),e("p",[s._v("执行顺序：")]),s._v(" "),e("p",[e("img",{attrs:{src:"http://img.yuadh.com/imgs/2022/12/01/1669900092048.png",alt:"1669900092048.png"}})]),s._v(" "),e("h3",{attrs:{id:"卸载时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载时"}},[s._v("#")]),s._v(" 卸载时")]),s._v(" "),e("p",[s._v("执行时机：组件从页面中消失")]),s._v(" "),e("p",[s._v("作用：用来做清理操作")]),s._v(" "),e("p",[e("img",{attrs:{src:"http://img.yuadh.com/imgs/2022/12/01/1669900097255.png",alt:"1669900097255.png"}})]),s._v(" "),e("h3",{attrs:{id:"不常用钩子函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不常用钩子函数"}},[s._v("#")]),s._v(" 不常用钩子函数")]),s._v(" "),e("h5",{attrs:{id:"getderivedstatefromprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getderivedstatefromprops"}},[s._v("#")]),s._v(" "),e("code",[s._v("getDerivedStateFromProps()")])]),s._v(" "),e("ul",[e("li",[e("strong",[e("code",[s._v("getDerivedStateFromProps")])]),s._v(" 会在调用 render 方法之前调用，并且在初始挂载及后续更新时都会被调用。它应返回一个对象来更新 state，如果返回 null 则不更新任何内容")]),s._v(" "),e("li",[s._v("不管原因是什么，都会在"),e("em",[s._v("每次")]),s._v("渲染前触发此方法")])]),s._v(" "),e("h5",{attrs:{id:"shouldcomponentupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[s._v("#")]),s._v(" "),e("code",[s._v("shouldComponentUpdate()")])]),s._v(" "),e("ul",[e("li",[s._v("根据 "),e("strong",[e("code",[s._v("shouldComponentUpdate()")])]),s._v(" 的返回值，判断 React 组件的输出是否受当前 state 或 props 更改的影响。默认行为是 state 每次发生变化组件都会重新渲染")]),s._v(" "),e("li",[s._v("当 props 或 state 发生变化时，"),e("strong",[e("code",[s._v("shouldComponentUpdate()")])]),s._v(" 会在渲染执行之前被调用。返回值默认为 true")])]),s._v(" "),e("h5",{attrs:{id:"getsnapshotbeforeupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getsnapshotbeforeupdate"}},[s._v("#")]),s._v(" "),e("code",[s._v("getSnapshotBeforeUpdate()")])]),s._v(" "),e("ul",[e("li",[e("strong",[e("code",[s._v("getSnapshotBeforeUpdate()")])]),s._v(" 在最近一次渲染输出（提交到 DOM 节点）之前调用。它使得组件能在发生更改之前从 DOM 中捕获一些信息（例如，滚动位置）。此生命周期的任何返回值将作为参数传递给 "),e("strong",[e("code",[s._v("componentDidUpdate()")])])]),s._v(" "),e("li",[s._v("此用法并不常见，但它可能出现在 UI 处理中，如需要以特殊方式处理滚动位置的聊天线程等")])]),s._v(" "),e("h2",{attrs:{id:"render-props模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render-props模式"}},[s._v("#")]),s._v(" render-props模式")]),s._v(" "),e("h3",{attrs:{id:"目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[s._v("#")]),s._v(" 目标")]),s._v(" "),e("ul",[e("li",[s._v("知道render-props模式有什么作用")]),s._v(" "),e("li",[s._v("能够说出render-props的使用步骤")])]),s._v(" "),e("h3",{attrs:{id:"react组件复用概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react组件复用概述"}},[s._v("#")]),s._v(" React组件复用概述")]),s._v(" "),e("ul",[e("li",[s._v("思考：如果两个组件中的部分功能相似或相同，该如何处理？")]),s._v(" "),e("li",[s._v("处理方式：复用相似的功能")]),s._v(" "),e("li",[s._v("复用什么？\n"),e("ul",[e("li",[s._v("state")]),s._v(" "),e("li",[s._v("操作state的方法")])])]),s._v(" "),e("li",[s._v("两种方式：\n"),e("ul",[e("li",[s._v("render props模式")]),s._v(" "),e("li",[s._v("高阶组件（HOC）")])])]),s._v(" "),e("li",[s._v("注意： 这两种方式不是新的API，而是利用React自身特点的编码技巧，演化而成的固定模式")])]),s._v(" "),e("h3",{attrs:{id:"思路分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路分析"}},[s._v("#")]),s._v(" 思路分析")]),s._v(" "),e("p",[s._v("思路：将要复用的state和操作state的方法封装到一个组件中")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("如何拿到该组件中复用的state")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("在使用组件时，添加一个值为函数的prop，通过函数参数来获取")]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<Mouse render = {mouse=>{}}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[s._v("如何渲染到任意的UI")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("使用该函数的返回值作为要渲染的UI内容")]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<Mouse render = {mouse=>{\n    <p>{mouse.x},{mouse.y}</p>\n  }}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])])])]),s._v(" "),e("h3",{attrs:{id:"使用步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用步骤"}},[s._v("#")]),s._v(" 使用步骤")]),s._v(" "),e("ul",[e("li",[s._v("创建Mouse组件，在组件中提供复用的逻辑代码")]),s._v(" "),e("li",[s._v("将要复用的状态作为 props.render(state)方法的参数，暴露到组件外部")]),s._v(" "),e("li",[s._v("使用props.render() 的返回值作为要渲染的内容")])]),s._v(" "),e("h3",{attrs:{id:"示例demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例demo"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Mouse extends React.Component {\n    // 鼠标位置状态\n    state = {\n        x: 0,\n        y: 0\n    }\n\n    // 监听鼠标移动事件\n    componentDidMount(){\n        window.addEventListener('mousemove',this.handleMouseMove)\n    }\n    handleMouseMove = e => {\n        this.setState({\n            x: e.clientX,\n            y: e.clientY\n        })\n    }\n    render(){\n        // 向外界提供当前子组件里面的数据\n        return this.props.render(this.state)\n    }\n}\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                App\n                <Mouse render={mouse => {\n                    return <p>X{mouse.x}Y{mouse.y}</p>\n                }}/>\n            </div>\n        )\n    }\n}\nReactDOM.render(<App />,document.getElementById('root'))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("h3",{attrs:{id:"children代替render属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#children代替render属性"}},[s._v("#")]),s._v(" children代替render属性")]),s._v(" "),e("ul",[e("li",[s._v("注意：并不是该模式叫 render props就必须使用名为render的prop，实际上可以使用任意名称的prop")]),s._v(" "),e("li",[s._v("把prop是一个函数并且告诉组件要渲染什么内容的技术叫做： render props模式")]),s._v(" "),e("li",[s._v("推荐：使用childre代替render属性")])]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<Mouse>\n\t{({x,y})=>{x},{y}}\n</Mouse>\nthis.props.children(this.state)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"高阶组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件"}},[s._v("#")]),s._v(" 高阶组件")]),s._v(" "),e("ul",[e("li",[s._v("知道高阶组件的作用")]),s._v(" "),e("li",[s._v("能够说出高阶的使用步骤")])]),s._v(" "),e("h3",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),e("ul",[e("li",[s._v("目的：实现状态逻辑复用")]),s._v(" "),e("li",[s._v("采用 包装模式")]),s._v(" "),e("li",[s._v("手机：获取保护功能")]),s._v(" "),e("li",[s._v("手机壳：提供保护功能")]),s._v(" "),e("li",[s._v("高阶组件就相当于手机壳，通过包装组件，增强组件功能")])]),s._v(" "),e("h3",{attrs:{id:"思路分析-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路分析-2"}},[s._v("#")]),s._v(" 思路分析")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("高阶组件(HOC、Higher-Order Component) 是一个函数，接收要包装的组件，返回增强后的组件")]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const EnhancedComponent = withHOC(WrappedComponent)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("高阶组件内部创建了一个类组件，在这个类组件中提供复用的状态逻辑代码，通过prop将复用的状态传递给被包装组件"),e("code",[s._v("WrappedComponent")])]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Mouse extends React.Component{\n  render(){\n    return <WrappedComponent{...this.state}>\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])]),s._v(" "),e("h3",{attrs:{id:"使用步骤-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用步骤-2"}},[s._v("#")]),s._v(" 使用步骤")]),s._v(" "),e("ul",[e("li",[s._v("创建一个函数，名称约定以with开头")]),s._v(" "),e("li",[s._v("指定函数参数，参数应该以大写字母开头")]),s._v(" "),e("li",[s._v("在函数内部创建一个类组件，提供复用的状态逻辑代码，并返回")]),s._v(" "),e("li",[s._v("在该组件中，渲染参数组件，同时将状态通过prop传递给参数组件")]),s._v(" "),e("li",[s._v("调用该高阶组件，传入要增强的组件，通过返回值拿到增强后的组件，并将其渲染到页面")])]),s._v(" "),e("p",[e("strong",[s._v("包装函数")])]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 定义一个函数，在函数内部创建一个相应类组件\nfunction withMouse(WrappedComponent) {\n    // 该组件提供复用状态逻辑\n    class Mouse extends React.Component {\n        state = {\n            x: 0,\n            y: 0\n        }\n        // 事件的处理函数\n        handleMouseMove = (e) => {\n            this.setState({\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n        // 当组件挂载的时候进行事件绑定\n        componentDidMount() {\n            window.addEventListener('mousemove', this.handleMouseMove)\n        }\n        // 当组件移除时候解绑事件\n        componentWillUnmount() {\n            window.removeEventListener('mousemove', this.handleMouseMove)\n        }\n        render() {\n            // 在render函数里面返回传递过来的组件，把当前组件的状态设置进去\n            return <WrappedComponent {...this.state} />\n        }\n    }\n    return Mouse\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("哪个组件需要加强，通过调用"),e("code",[s._v("withMouse")]),s._v("这个函数，然后把返回的值设置到父组件中即可")])]),s._v(" "),e("div",{staticClass:"language-react line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function Position(props) {\n    return (\n        <p>\n            X:{props.x}\n            Y:{props.y}\n        </p>\n    )\n}\n// 把position 组件来进行包装\nlet MousePosition = withMouse(Position)\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div>\n                高阶组件\n                <MousePosition></MousePosition>\n            </div>\n        )\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("h3",{attrs:{id:"设置displayname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置displayname"}},[s._v("#")]),s._v(" 设置"),e("code",[s._v("displayName")])]),s._v(" "),e("ul",[e("li",[s._v("使用高阶组件存在的问题：得到两个组件的名称相同")]),s._v(" "),e("li",[s._v("原因：默认情况下，React使用组件名称作为"),e("code",[s._v("displayName")])]),s._v(" "),e("li",[s._v("解决方式：为高阶组件设置"),e("code",[s._v("displayName")]),s._v("，便于调试时区分不同的组件")]),s._v(" "),e("li",[e("code",[s._v("displayName的作用：用于设置调试信息(React Developer Tools信息)")])]),s._v(" "),e("li",[s._v("设置方式：")])])])}),[],!1,null,null,null);e.default=t.exports}}]);