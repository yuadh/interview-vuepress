(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{347:function(a,s,t){"use strict";t.r(s);var e=t(4),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),s("p",[a._v("HTML 是网页使用的语言，定义了网页的结构和内容。浏览器访问网站，其实就是从服务器下载 HTML 代码，然后渲染出网页。")]),a._v(" "),s("p",[a._v("HTML 的全名是“超文本标记语言”（HyperText Markup Language），上个世纪90年代由欧洲核子研究中心的物理学家蒂姆·伯纳斯-李（Tim Berners-Lee）发明。它的最大特点就是支持超链接，点击链接就可以跳转到其他网页，从而构成了整个互联网。")]),a._v(" "),s("p",[a._v("1999年，HTML 4.01 版发布，成为广泛接受的 HTML 标准。2014年，HTML 5 发布，这是目前正在使用的版本。")]),a._v(" "),s("p",[a._v("浏览器的网页开发，涉及三种技术：HTML、CSS 和 JavaScript。HTML 语言定义网页的结构和内容，CSS 样式表定义网页的样式，JavaScript 语言定义网页与用户的互动行为。HTML 语言是网页开发的基础，CSS 和 JavaScript 都是基于 HTML 才能生效，即使没有这两者，HTML 本身也能使用，可以完成基本的内容展示。本教程只介绍 HTML 语言。")]),a._v(" "),s("p",[a._v("下面就是一个简单网页的 HTML 源码。")]),a._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token doctype"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<!")]),s("span",{pre:!0,attrs:{class:"token doctype-tag"}},[a._v("DOCTYPE")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token name"}},[a._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("html")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("lang")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("zh-CN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("网页标题"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("Hello World"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("p",[a._v("上面这段代码，可以保存成文件"),s("code",[a._v("hello.html")]),a._v("。浏览器打开这个本地文件，就能看到文字“Hello World”。")]),a._v(" "),s("p",[a._v("浏览器右键菜单的“查看源码”（View page source），可以展示当前网页的 HTML 源码。")]),a._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[a._v("#")]),a._v(" 基本概念")]),a._v(" "),s("h3",{attrs:{id:"标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[a._v("#")]),a._v(" 标签")]),a._v(" "),s("p",[a._v("网页的 HTML 代码由许许多多不同的标签（tag）构成。学习 HTML 语言，就是学习各种标签的用法。")]),a._v(" "),s("p",[a._v("下面就是标签的一个例子。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<title>网页标题</title>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("<title>")]),a._v("和"),s("code",[a._v("</title>")]),a._v("就是一对标签。")]),a._v(" "),s("p",[a._v("标签用来告诉浏览器，如何处理这段代码。标签的内容就是浏览器所要渲染的、展示在网页上的内容。")]),a._v(" "),s("p",[a._v("标签放在一对尖括号里面（比如"),s("code",[a._v("<title>")]),a._v("），大多数标签都是成对出现的，分成开始标签和结束标签，结束标签在标签名之前加斜杠（比如"),s("code",[a._v("</title>")]),a._v("）。但是，也有一些标签不是成对使用，而是只有开始标签，没有结束标签，比如上一节示例的"),s("code",[a._v("<meta>")]),a._v("标签。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta charset="utf-8">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("<meta>")]),a._v("标签就没有结束标签"),s("code",[a._v("</meta>")]),a._v("。")]),a._v(" "),s("p",[a._v("这种单独使用的标签，通常是因为标签本身就足够完成功能了，不需要标签之间的内容。实际应用中，它们主要用来提示浏览器，做一些特别处理。")]),a._v(" "),s("p",[a._v("标签可以嵌套。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div><p>hello world</p></div>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("<div>")]),a._v("标签内部包含了一个"),s("code",[a._v("<p>")]),a._v("标签。")]),a._v(" "),s("p",[a._v("嵌套时，必须保证正确的闭合顺序，不能跨层嵌套，否则会出现意想不到的渲染结果。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div><p>hello world</div></p>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码就是错误的嵌套，闭合顺序不正确。")]),a._v(" "),s("p",[a._v("HTML 标签名是大小写不敏感，比如"),s("code",[a._v("<title>")]),a._v("和"),s("code",[a._v("<TITLE>")]),a._v("是同一个标签。不过，一般习惯都是使用小写。")]),a._v(" "),s("p",[a._v("另外，HTML 语言忽略缩进和换行。下面几种写法的渲染结果是一样的。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<title>网页标题</title>\n\n<title>\n  网页标题\n</title>\n\n<title>网页\n标题</title>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("进一步说，整个网页的 HTML 代码完全可以写成一行，浏览器照样解析，结果完全一样。所以，正式发布网页之前，开发者有时会把源码压缩成一行，以减少传输的字节数。")]),a._v(" "),s("p",[a._v("各种网页的样式效果，比如内容的缩进和换行，主要靠 CSS 来实现。")]),a._v(" "),s("h3",{attrs:{id:"元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素"}},[a._v("#")]),a._v(" 元素")]),a._v(" "),s("p",[a._v("浏览器渲染网页时，会把 HTML 源码解析成一个标签树，每个标签都是树的一个节点（node）。这种节点就称为网页元素（element）。所以，“标签”和“元素”基本上是同义词，只是使用的场合不一样：标签是从源码角度来看，元素是从编程角度来看，比如"),s("code",[a._v("<p>")]),a._v("标签对应网页的"),s("code",[a._v("p")]),a._v("元素。")]),a._v(" "),s("p",[a._v("嵌套的标签就构成了网页元素的层级关系。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<div><p>hello world</p></div>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("div")]),a._v("元素内部包含了一个"),s("code",[a._v("p")]),a._v("元素。上层元素又称为“父元素”，下层元素又称为“子元素”，即"),s("code",[a._v("div")]),a._v("是"),s("code",[a._v("p")]),a._v("的父元素，"),s("code",[a._v("p")]),a._v("是"),s("code",[a._v("div")]),a._v("的子元素。")]),a._v(" "),s("h3",{attrs:{id:"块级元素-行内元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块级元素-行内元素"}},[a._v("#")]),a._v(" 块级元素，行内元素")]),a._v(" "),s("p",[a._v("所有元素可以分成两大类：块级元素（block）和行内元素（inline）。")]),a._v(" "),s("p",[a._v("块级元素默认占据一个独立的区域，在网页上会自动另起一行，占据 100% 的宽度。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<p>hello</p>\n<p>world</p>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("p")]),a._v("元素是块级元素，因此浏览器会将内容分成两行显示。")]),a._v(" "),s("p",[a._v("行内元素默认与其他元素在同一行，不产生换行。比如，"),s("code",[a._v("span")]),a._v("就是行内元素，通常用来为某些文字指定特别的样式。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<span>hello</span>\n<span>world</span>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("span")]),a._v("元素是行内元素，因此浏览器会将两行内容放在一行显示。")]),a._v(" "),s("h3",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[a._v("#")]),a._v(" 属性")]),a._v(" "),s("p",[a._v("属性（attribute）是标签的额外信息，使用空格与标签名和其他属性分隔。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<img src="demo.jpg" width="500">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("<img>")]),a._v("标签有两个属性："),s("code",[a._v("src")]),a._v("和"),s("code",[a._v("width")]),a._v("。")]),a._v(" "),s("p",[a._v("属性可以用等号指定属性值，比如上例的"),s("code",[a._v("demo.jpg")]),a._v("就是"),s("code",[a._v("src")]),a._v("的属性值。属性值一般放在双引号里面，这不是必需的，但推荐总是使用双引号。")]),a._v(" "),s("p",[a._v("注意，属性名是大小写不敏感的，"),s("code",[a._v("onclick")]),a._v("和"),s("code",[a._v("onClick")]),a._v("是同一个属性。")]),a._v(" "),s("p",[a._v("HTML 提供大量属性，用来定制标签的行为，详细介绍请看《元素的属性》一章。")]),a._v(" "),s("h2",{attrs:{id:"基本标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本标签"}},[a._v("#")]),a._v(" 基本标签")]),a._v(" "),s("p",[a._v("符合 HTML 语法标准的网页，应该满足下面的基本结构。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<!DOCTYPE html>\n<html lang="zh-CN">\n<head>\n  <meta charset="utf-8">\n  <title></title>\n</head>\n<body>\n</body>\n</html>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("不管多么复杂的网页，都是从上面这个基本结构衍生出来的。")]),a._v(" "),s("p",[a._v("前面说过，HTML 代码的缩进和换行，对于浏览器不产生作用。所以，上面的代码完全可以写成一行，渲染结果不变。上面这样分行写，只是为了提高可读性。")]),a._v(" "),s("p",[a._v("下面就依次介绍，这个基本结构的主要标签。它们构成了网页的骨架。")]),a._v(" "),s("h3",{attrs:{id:"doctype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doctype"}},[a._v("#")]),a._v(" "),s("code",[a._v("<!doctype>")])]),a._v(" "),s("p",[a._v("网页的第一个标签通常是"),s("code",[a._v("<!doctype>")]),a._v("，表示文档类型，告诉浏览器如何解析网页。")]),a._v(" "),s("p",[a._v("一般来说，只要像下面这样，简单声明"),s("code",[a._v("doctype")]),a._v("为"),s("code",[a._v("html")]),a._v("即可。浏览器就会按照 HTML 5 的规则处理网页。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<!doctype html>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("有时，该标签采用完全大写的形式，以便区别于正常的 HTML 标签。因为"),s("code",[a._v("<!doctype>")]),a._v("本质上不是标签，更像一个处理指令。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<!DOCTYPE html>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[a._v("#")]),a._v(" "),s("code",[a._v("<html>")])]),a._v(" "),s("p",[s("code",[a._v("<html>")]),a._v("标签是网页的顶层容器，即标签树结构的顶层节点，也称为根元素（root element），其他元素都是它的子元素。一个网页只能有一个"),s("code",[a._v("<html>")]),a._v("标签。")]),a._v(" "),s("p",[a._v("该标签的"),s("code",[a._v("lang")]),a._v("属性，表示网页内容默认的语言。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<html lang="zh-CN">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码表示，网页是中文内容。如果是英文内容，"),s("code",[a._v("zh-CN")]),a._v("要改成"),s("code",[a._v("en")]),a._v("。更详细的介绍，参见《元素的属性》一章。")]),a._v(" "),s("h3",{attrs:{id:"head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[a._v("#")]),a._v(" "),s("code",[a._v("<head>")])]),a._v(" "),s("p",[s("code",[a._v("<head>")]),a._v("标签是一个容器标签，用于放置网页的元信息。它的内容不会出现在网页上，而是为网页渲染提供额外信息。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<!doctype html>\n<html>\n  <head>\n    <title>网页标题</title>\n  </head>\n</html>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("code",[a._v("<head>")]),a._v("是"),s("code",[a._v("<html>")]),a._v("的第一个子元素。如果网页不包含"),s("code",[a._v("<head>")]),a._v("，浏览器会自动创建一个。")]),a._v(" "),s("p",[s("code",[a._v("<head>")]),a._v("的子元素一般有下面七个，后文会一一介绍。")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("<meta>")]),a._v("：设置网页的元数据。")]),a._v(" "),s("li",[s("code",[a._v("<link>")]),a._v("：连接外部样式表。")]),a._v(" "),s("li",[s("code",[a._v("<title>")]),a._v("：设置网页标题。")]),a._v(" "),s("li",[s("code",[a._v("<style>")]),a._v("：放置内嵌的样式表。")]),a._v(" "),s("li",[s("code",[a._v("<script>")]),a._v("：引入脚本。")]),a._v(" "),s("li",[s("code",[a._v("<noscript>")]),a._v("：浏览器不支持脚本时，所要显示的内容。")]),a._v(" "),s("li",[s("code",[a._v("<base>")]),a._v("：设置网页内部相对 URL 的计算基准。")])]),a._v(" "),s("h3",{attrs:{id:"meta"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#meta"}},[a._v("#")]),a._v(" "),s("code",[a._v("<meta>")])]),a._v(" "),s("p",[s("code",[a._v("<meta>标签用于设置或说明网页的元数据，必须放在<head>里面。一个<meta>标签就是一项元数据，网页可以有多个<meta>。<meta>标签约定放在<head>内容的最前面。")])]),a._v(" "),s("p",[a._v("不管什么样的网页，一般都可以放置以下两个"),s("code",[a._v("<meta>")]),a._v("标签。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<head>\n  <meta charset="utf-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1">\n  <title>Page Title</title>\n</head>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("上面例子中，第一个"),s("code",[a._v("<meta>")]),a._v("标签表示网页采用 UTF-8 格式编码，第二个"),s("code",[a._v("<meta>")]),a._v("标签表示网页在手机端可以自动缩放。")]),a._v(" "),s("p",[s("code",[a._v("<meta>标签有五个属性，下面依次介绍。")])]),a._v(" "),s("p",[s("strong",[a._v("（1）charset 属性")])]),a._v(" "),s("p",[s("code",[a._v("<meta>标签的charset属性，用来指定网页的编码方式。该属性非常重要，如果设置得不正确，浏览器可能无法正确解码，就会显示乱码。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta charset="utf-8">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码声明，网页为 UTF-8 编码。虽然开发者可以使用其他的编码方式，但正确的做法几乎总是应该采用 UTF-8。")]),a._v(" "),s("p",[a._v("注意，这里声明的编码方式，应该与网页实际的编码方式一致，即声明了"),s("code",[a._v("utf-8")]),a._v("，网页就应该使用 UTF-8 编码保存。如果这里声明了"),s("code",[a._v("utf-8")]),a._v("，实际却是使用另一种编码（比如 GB2312），并不会导致浏览器的自动转码，网页可能会显示为乱码。")]),a._v(" "),s("p",[s("strong",[a._v("（2）name 属性，content 属性")])]),a._v(" "),s("p",[s("code",[a._v("<meta>标签的name属性表示元数据的名字，content属性表示元数据的值。它们合在一起使用，就可以为网页指定一项元数据。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<head>\n  <meta name="description" content="HTML 语言入门">\n  <meta name="keywords" content="HTML,教程">\n  <meta name="author" content="张三">\n</head>\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("上面代码包含了三个元数据："),s("code",[a._v("description")]),a._v("是网页内容的描述，"),s("code",[a._v("keywords")]),a._v("是网页内容的关键字，"),s("code",[a._v("author")]),a._v("是网页作者。")]),a._v(" "),s("p",[a._v("元数据有很多种，大部分涉及浏览器内部工作机制，或者特定的使用场景，这里就不一一介绍了。下面是一些例子。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta name="viewport" content="width=device-width, initial-scale=1">\n<meta name="application-name" content="Application Name">\n<meta name="generator" content="program">\n<meta name="subject" content="your document\'s subject">\n<meta name="referrer" content="no-referrer">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[s("strong",[a._v("（3）http-equiv 属性，content 属性")])]),a._v(" "),s("p",[s("code",[a._v("<meta>标签的http-equiv属性用来补充 HTTP 回应的头信息字段，如果服务器发回的 HTTP 回应缺少某个字段，就可以用它补充。<meta>标签的content属性是对应的字段内容。这两个属性与 HTTP 协议相关，属于高级用法，这里就不详细介绍了。")])]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta http-equiv="Content-Security-Policy" content="default-src \'self\'">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码设定 HTTP 回应的"),s("code",[a._v("Content-Security-Policy")]),a._v("字段。")]),a._v(" "),s("p",[a._v("下面是另一些例子。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('<meta http-equiv="Content-Type" content="Type=text/html; charset=utf-8">\n<meta http-equiv="refresh" content="30">\n<meta http-equiv="refresh" content="30;URL=\'http://website.com\'">\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#body"}},[a._v("#")]),a._v(" "),s("code",[a._v("<body>")])]),a._v(" "),s("p",[s("code",[a._v("<body>")]),a._v("标签是一个容器标签，用于放置网页的主体内容。浏览器显示的页面内容，都放置在它的内部。它是"),s("code",[a._v("<html>")]),a._v("的第二个子元素，紧跟在"),s("code",[a._v("<head>")]),a._v("后面。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<html>\n  <head>\n    <title>网页标题</title>\n  </head>\n  <body>\n    <p>hello world</p>\n  </body>\n</html>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h2",{attrs:{id:"空格和换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空格和换行"}},[a._v("#")]),a._v(" 空格和换行")]),a._v(" "),s("p",[a._v("HTML 语言有自己的空格处理规则。标签内容的头部和尾部的空格，一律忽略不计。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<p>  hello world   </p>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("hello")]),a._v("前面的空格和"),s("code",[a._v("world")]),a._v("后面的空格，浏览器一律忽略不计。")]),a._v(" "),s("p",[a._v("标签内容里面的多个连续空格（包含制表符"),s("code",[a._v("\\t")]),a._v("），会被浏览器合并成一个。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<p>hello      world</p>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("hello")]),a._v("与"),s("code",[a._v("world")]),a._v("之间有多个连续空格，浏览器会将它们合并成一个。网页渲染的结果是，"),s("code",[a._v("hello")]),a._v("与"),s("code",[a._v("world")]),a._v("之间只有一个空格。")]),a._v(" "),s("p",[a._v("浏览器还会将文本里面的换行符（"),s("code",[a._v("\\n")]),a._v("）和回车符（"),s("code",[a._v("\\r")]),a._v("），替换成空格。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("<p>hello\n\n\n\nworld\n</p>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("上面代码中，"),s("code",[a._v("hello")]),a._v("与"),s("code",[a._v("world")]),a._v("之间有多个换行，浏览器会将它们替换成空格，然后再将多个空格合并成一个。网页渲染的结果是，"),s("code",[a._v("hello")]),a._v("与"),s("code",[a._v("world")]),a._v("之间有一个空格。")]),a._v(" "),s("p",[a._v("这意味着，HTML 源码里面的换行，不会产生换行效果。")]),a._v(" "),s("h2",{attrs:{id:"注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),s("p",[a._v("HTML 代码可以包含注释，浏览器会自动忽略注释。注释以"),s("code",[a._v("\x3c!--")]),a._v("开头，以"),s("code",[a._v("--\x3e")]),a._v("结尾，下面就是一个注释的例子。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!-- 这是一个注释 --\x3e\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("注释可以是多行的，并且内部的 HTML 都不再生效了。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("\x3c!--\n  <p>hello world</p>\n--\x3e\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("上面代码是一个注释的区块，内部的代码都是无效的，浏览器不会解析，更不会渲染它们。")]),a._v(" "),s("p",[a._v("注释有助于理解代码的含义，复杂的代码块前面最好加上注释。")])])}),[],!1,null,null,null);s.default=n.exports}}]);