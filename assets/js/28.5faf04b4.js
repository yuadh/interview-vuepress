(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{362:function(s,a,e){"use strict";e.r(a);var t=e(4),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"react概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react概述"}},[s._v("#")]),s._v(" React概述")]),s._v(" "),a("p",[s._v("React是一个用于构建用户界面的javaScript库，起源于facebook的内部项目，后续在13年开源了出来")]),s._v(" "),a("ul",[a("li",[s._v("声明式")])]),s._v(" "),a("p",[s._v("你只需要描述UI看起来是什么样式，就跟写HTML一样，React负责渲染UI")]),s._v(" "),a("ul",[a("li",[s._v("基于组件")])]),s._v(" "),a("p",[s._v("组件时React最重要的内容，组件表示页面中的部分内容")]),s._v(" "),a("ul",[a("li",[s._v("学习一次，随处使用")])]),s._v(" "),a("p",[s._v("使用React可以开发Web应用，使用React可以开发移动端，可以开发VR应用")]),s._v(" "),a("h4",{attrs:{id:"jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[s._v("#")]),s._v(" JSX")]),s._v(" "),a("p",[s._v("由于通过createElement()方法创建的React元素有一些问题，代码比较繁琐，结构不直观，无法一眼看出描述的结构，不优雅，用户体验不爽")]),s._v(" "),a("p",[a("strong",[s._v("JSX概述")])]),s._v(" "),a("p",[s._v("JSX是JavaScript XML 的简写，表示在JavaScript代码中写HTML格式的代码")]),s._v(" "),a("p",[s._v("优势：声明式语法更加直观，与HTML结构相同，降低了学习成本，提升开发效率")]),s._v(" "),a("h2",{attrs:{id:"脚手架快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚手架快速入门"}},[s._v("#")]),s._v(" 脚手架快速入门")]),s._v(" "),a("p",[a("code",[s._v("npx create-react-app project-name")])]),s._v(" "),a("p",[s._v("输出 "),a("code",[s._v("helloworld")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React from 'react'\nimport ReactDOM from 'react-dom'\nlet h1 = React.createElement('h1',null,'我是标题')\nReactDOM.render(h1,document.getElementById('root'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"jsx基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx基本使用"}},[s._v("#")]),s._v(" JSX基本使用")]),s._v(" "),a("h4",{attrs:{id:"使用步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用步骤"}},[s._v("#")]),s._v(" 使用步骤")]),s._v(" "),a("ul",[a("li",[s._v("使用JSX语法创建react元素")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let h1 = <h1>我是通过JSX创建的元素</h1>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("使用ReactDOM来渲染元素")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ReactDOM.render(h1,document.getElementById('root'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"为什么在脚手架中可以使用jsx语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么在脚手架中可以使用jsx语法"}},[s._v("#")]),s._v(" 为什么在脚手架中可以使用JSX语法")]),s._v(" "),a("ul",[a("li",[s._v("JSX 不是标准的ECMAScript语法，它是ECMAScript的语法拓展")]),s._v(" "),a("li",[s._v("需要使用babel编译处理后，才能在浏览器环境中使用")]),s._v(" "),a("li",[s._v("create-react-app脚手架中已经默认有该配置，无需手动配置")]),s._v(" "),a("li",[s._v("编译JSX语法的包： @bable/preset-react")])]),s._v(" "),a("h4",{attrs:{id:"注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点"}},[s._v("#")]),s._v(" 注意点")]),s._v(" "),a("ul",[a("li",[s._v("React元素的属性名使用驼峰命名法")]),s._v(" "),a("li",[s._v("特殊属性名：class -> className，for -> htmlFor，tabindex -> tabIndex")]),s._v(" "),a("li",[s._v("如果没有子节点的React元素可以用 "),a("code",[s._v("/>")]),s._v(" 来结束")]),s._v(" "),a("li",[s._v("推荐：使用 小括号包裹JSX，从而避免JS中自动插入分号报错")])]),s._v(" "),a("h2",{attrs:{id:"jxs基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jxs基本语法"}},[s._v("#")]),s._v(" JXS基本语法")]),s._v(" "),a("p",[s._v("JSX是来描述页面的结构，我们一般在编写业务逻辑渲染页面的时候，需要涉及到传递值，调用函数，判断条件，循环等，这一些在JSX中都能得到支持")]),s._v(" "),a("h4",{attrs:{id:"嵌入js表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌入js表达式"}},[s._v("#")]),s._v(" 嵌入JS表达式")]),s._v(" "),a("p",[s._v("语法：{JavaScritp表达式}")]),s._v(" "),a("p",[s._v("例子：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let content = '插入的内容'\nlet h1 = <h1>我是通过JSX创建的元素+ {content}</h1>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h5",{attrs:{id:"注意点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意点-2"}},[s._v("#")]),s._v(" 注意点")]),s._v(" "),a("ul",[a("li",[s._v("只要是合法的js表达式都可以进行嵌入")]),s._v(" "),a("li",[s._v("JSX自身也是js表达式")]),s._v(" "),a("li",[s._v("注意：js中的对象是一个例外，一般只会出现在style属性中")]),s._v(" "),a("li",[s._v("注意：在{}中不能出现语句")])]),s._v(" "),a("h4",{attrs:{id:"条件渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件渲染"}},[s._v("#")]),s._v(" 条件渲染")]),s._v(" "),a("p",[s._v("根据不同的条件来渲染不同的JSX结构")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let isLoading = true\nlet loading = ()=>{\n    if(isLoading){\n        return <div>Loading...</div>\n    }\n    return <div>加载完成</div>\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("可以发现，写JSX的条件渲染与我们之前编写代码的逻辑是差不多的，根据不同的判断逻辑，返回不同的 JSX结构，然后渲染到页面中")]),s._v(" "),a("h4",{attrs:{id:"列表渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表渲染"}},[s._v("#")]),s._v(" 列表渲染")]),s._v(" "),a("ul",[a("li",[s._v("如果需要渲染一组数据，我们应该使用数组的 map () 方法")]),s._v(" "),a("li",[s._v("注意：渲染列表的时候需要添加key属性，key属性的值要保证唯一")]),s._v(" "),a("li",[s._v("原则：map()遍历谁，就给谁添加key属性")]),s._v(" "),a("li",[s._v("注意：尽量避免使用索引号作为key")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let arr = [{\n    id:1,\n    name:'三国演义'\n},{\n    id:2,\n    name:'水浒传'\n},{\n    id:3,\n    name:'西游记'\n},{\n    id:4,\n    name:'红楼梦'\n}]\nlet ul = (<ul>\n    {arr.map(item => <li key={item.id}>{item.name}</li>)}\n</ul>)\nReactDOM.render(ul,document.getElementById('root'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h4",{attrs:{id:"样式处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式处理"}},[s._v("#")]),s._v(" 样式处理")]),s._v(" "),a("h5",{attrs:{id:"行内样式-style"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内样式-style"}},[s._v("#")]),s._v(" 行内样式 -style")]),s._v(" "),a("p",[s._v("在style里面我们通过对象的方式传递数据")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<li key={item.id} style={{'color': 'red',\"backgroundColor\": 'pink'}}>{item.name}</li>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这种方式比较的麻烦，不方便进行阅读，而且还会导致代码比较的繁琐")]),s._v(" "),a("h5",{attrs:{id:"类名-classname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类名-classname"}},[s._v("#")]),s._v(" 类名 -className")]),s._v(" "),a("p",[s._v("创建CSS文件编写样式代码")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".container")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("text-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" center\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在js中进行引入，然后设置类名即可")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import './css/index.css'\n\n<li className='container' key={item.id} style={{'color': 'red',\"backgroundColor\": 'pink'}}>{item.name}</li>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("ul",[a("li",[s._v("JSX是React的核心内容")]),s._v(" "),a("li",[s._v("JSX表示在JS代码中写HTML结构，是React声明式的体现")]),s._v(" "),a("li",[s._v("使用JSX配合嵌入的JS表达式、条件渲染、列表渲染、可以描述任意UI结构")]),s._v(" "),a("li",[s._v("推荐使用className的方式给JSX添加样式")]),s._v(" "),a("li",[s._v("React完全利用JS语言自身的能力来编写UI，而不是造轮子增强HTML功能")])]),s._v(" "),a("h2",{attrs:{id:"react组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react组件"}},[s._v("#")]),s._v(" React组件")]),s._v(" "),a("ul",[a("li",[s._v("组件是React的一等公民，使用React就是在用组件")]),s._v(" "),a("li",[s._v("组件表示页面中的部分功能")]),s._v(" "),a("li",[s._v("组合多个组件实现完整的页面功能")]),s._v(" "),a("li",[s._v("特点：可复用、独立、可组合")])]),s._v(" "),a("h3",{attrs:{id:"函数创建组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数创建组件"}},[s._v("#")]),s._v(" 函数创建组件")]),s._v(" "),a("ul",[a("li",[s._v("函数组件：使用JS的函数创建组件")]),s._v(" "),a("li",[s._v("**约定1：**函数名称必须以大写字母开头")]),s._v(" "),a("li",[s._v("**约定2：**函数组件必须有返回值，表示该组件的结构")]),s._v(" "),a("li",[s._v("如果返回值为null，表示不渲染任何内容")])]),s._v(" "),a("h4",{attrs:{id:"示例demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("p",[s._v("编写函数组件")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Hello() {\n    return (\n        <div>这是第一个函数组件</div>\n    )\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("利用ReactDOM.render()进行渲染")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ReactDOM.render(<Hello />,document.getElementById('root'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"类组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类组件"}},[s._v("#")]),s._v(" 类组件")]),s._v(" "),a("ul",[a("li",[s._v("使用ES6语法的class创建的组件")]),s._v(" "),a("li",[s._v("约定1：类名称也必须要大写字母开头")]),s._v(" "),a("li",[s._v("约定2：类组件应该继承React.Component父类，从而可以使用父类中提供的方法或者属性")]),s._v(" "),a("li",[s._v("约定3：类组件必须提供 render 方法")]),s._v(" "),a("li",[s._v("约定4：render方法中必须要有return返回值")])]),s._v(" "),a("h4",{attrs:{id:"示例demo-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo-2"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("p",[s._v("创建class类，继承React.Component，在里面提供render方法，在return里面返回内容")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Hello extends React.Component{\n    render(){\n        return (\n            <div>这是第一个类组件</div>\n        )\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("通过ReactDOM进行渲染")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ReactDOM.render(<Hello />,document.getElementById('root'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"抽离成单独的js文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抽离成单独的js文件"}},[s._v("#")]),s._v(" 抽离成单独的JS文件")]),s._v(" "),a("ul",[a("li",[s._v("思考：项目中组件多了之后，该如何组织这些组件？")]),s._v(" "),a("li",[s._v("选择一：将所有的组件放在同一个JS文件中")]),s._v(" "),a("li",[s._v("选择二：将每个组件放到单独的JS文件中")]),s._v(" "),a("li",[a("strong",[s._v("组件作为一个独立的个体，一般都会放到一个单独的JS文件中")])])]),s._v(" "),a("h4",{attrs:{id:"示例demo-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo-3"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("ul",[a("li",[s._v("创建Hello.js")]),s._v(" "),a("li",[s._v("在Hello.js 中导入React，创建组件，在Hello.js中导出")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import React from 'react'\n\nexport default class extends React.Component {\n    render(){\n        return (\n            <div>单独抽离出来的 Hello</div>\n        )\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("在index.js中导入Hello组件，渲染到页面")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import Hello from './js/Hello'\nReactDOM.render(<Hello />,document.getElementById('root'))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"react事件处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react事件处理"}},[s._v("#")]),s._v(" React事件处理")]),s._v(" "),a("h3",{attrs:{id:"事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定"}},[s._v("#")]),s._v(" 事件绑定")]),s._v(" "),a("ul",[a("li",[s._v("React事件绑定语法与DOM事件语法相似")]),s._v(" "),a("li",[s._v("语法：on+事件名称=事件处理函数，比如  onClick = function(){}")]),s._v(" "),a("li",[s._v("注意：React事件采用驼峰命名法")])]),s._v(" "),a("h4",{attrs:{id:"示例demo-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo-4"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default class extends React.Component {\n    clickHandle(e){\n        console.log('点了')\n    }\n    render(){\n        return (\n            <div><button onClick = {this.clickHandle}>点我点我点我</button></div>\n        )\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h4",{attrs:{id:"小结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("ul",[a("li",[s._v("在React中绑定事件与原生很类似")]),s._v(" "),a("li",[s._v("需要注意点在于，在React绑定事件需要遵循驼峰命名法")]),s._v(" "),a("li",[s._v("类组件与函数组件绑定事件是差不多的，只是在类组件中绑定事件函数的时候需要用到this，代表指向当前的类的引用，在函数中不需要调用this")])]),s._v(" "),a("h3",{attrs:{id:"事件对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件对象"}},[s._v("#")]),s._v(" 事件对象")]),s._v(" "),a("ul",[a("li",[s._v("可以通过事件处理函数的参数获取到事件对象")]),s._v(" "),a("li",[s._v("React中的事件对象叫做：合成事件")]),s._v(" "),a("li",[s._v("合成事件：兼容所有浏览器，无需担心跨浏览器兼容问题")]),s._v(" "),a("li",[s._v("除兼容所有浏览器外，它还拥有和浏览器原生事件相同的接口，包括 "),a("code",[s._v("stopPropagation()")]),s._v("和 "),a("code",[s._v("preventDefault()")])]),s._v(" "),a("li",[s._v("如果你想获取到原生事件对象，可以通过 "),a("code",[s._v("nativeEvent")]),s._v(" 属性来进行获取")])]),s._v(" "),a("h4",{attrs:{id:"示例demo-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo-5"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default class extends React.Component {\n    clickHandle(e){\n        // 获取原生事件对象\n        console.log(e.nativeEvent)\n    }\n    render(){\n        return (\n            <div><button onClick = {this.clickHandle}>点我点我点我</button></div>\n        )\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"支持的事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持的事件"}},[s._v("#")]),s._v(" 支持的事件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Clipboard Events  剪切板事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名 ：onCopy onCut onPaste")]),s._v(" "),a("li",[s._v("属性     ：DOMDataTransfer clipboardData")])])]),s._v(" "),a("li",[a("p",[s._v("compositionEvent  复合事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名： onCompositionEnd onCompositionStart onCompositionUpdate")]),s._v(" "),a("li",[s._v("属性： string data")])])]),s._v(" "),a("li",[a("p",[s._v("Keyboard Events  键盘事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名：onKeyDown onKeyPress onKeyUp")]),s._v(" "),a("li",[s._v("属性： 例如 number keyCode  太多就不一一列举")])])]),s._v(" "),a("li",[a("p",[s._v("Focus Events  焦点事件  （这些焦点事件在 React DOM 上的所有元素都有效，不只是表单元素）")]),s._v(" "),a("ul",[a("li",[s._v("事件名： onFocus onBlur")]),s._v(" "),a("li",[s._v("属性： DOMEventTarget relatedTarget")])])]),s._v(" "),a("li",[a("p",[s._v("Form Events  表单事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名： onChange onInput onInvalid onSubmit")])])]),s._v(" "),a("li",[a("p",[s._v("Mouse Events  鼠标事件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("事件名：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit\nonDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave\nonMouseMove onMouseOut onMouseOver onMouseUp\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("Pointer Events  指针事件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("事件名：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture\nonLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("Selection Events  选择事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名：onSelect")])])]),s._v(" "),a("li",[a("p",[s._v("Touch Events  触摸事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名：onTouchCancel onTouchEnd onTouchMove onTouchStart")])])]),s._v(" "),a("li",[a("p",[s._v("UI Events  UI 事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名： onScroll")])])]),s._v(" "),a("li",[a("p",[s._v("Wheel Events  滚轮事件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("事件名：onWheel")])]),s._v(" "),a("li",[a("p",[s._v("属性：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("number deltaMode\nnumber deltaX\nnumber deltaY\nnumber deltaZ\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("Media Events  媒体事件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("事件名：")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted\nonEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay\nonPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend\nonTimeUpdate onVolumeChange onWaiting\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("Image Events 图像事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名：onLoad onError")])])]),s._v(" "),a("li",[a("p",[s._v("Animation Events 动画事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名：onAnimationStart onAnimationEnd onAnimationIteration")])])]),s._v(" "),a("li",[a("p",[s._v("Transition Events 过渡事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名：onTransitionEnd")])])]),s._v(" "),a("li",[a("p",[s._v("Other Events  其他事件")]),s._v(" "),a("ul",[a("li",[s._v("事件名： onToggle")])])])]),s._v(" "),a("h2",{attrs:{id:"有状态组件和无状态组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件和无状态组件"}},[s._v("#")]),s._v(" 有状态组件和无状态组件")]),s._v(" "),a("ul",[a("li",[s._v("函数组件又叫做 无状态组件，类组件又叫做 有状态组件")]),s._v(" "),a("li",[s._v("状态(state) 即数据")]),s._v(" "),a("li",[s._v("函数组件没有自己的状态，只负责数据展示")]),s._v(" "),a("li",[s._v("类组件有自己的状态，负责更新UI，让页面动起来")])]),s._v(" "),a("h2",{attrs:{id:"state和setstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state和setstate"}},[s._v("#")]),s._v(" State和SetState")]),s._v(" "),a("h3",{attrs:{id:"state基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state基本使用"}},[s._v("#")]),s._v(" state基本使用")]),s._v(" "),a("ul",[a("li",[s._v("状态(state)即数据，是组件内部的私有数据，只能在组件内部使用")]),s._v(" "),a("li",[s._v("state的值是对象，表示一个组件中可以有多个数据")]),s._v(" "),a("li",[s._v("通过this.state来获取状态")])]),s._v(" "),a("h4",{attrs:{id:"示例demo-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo-6"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default class extends React.Component {\n    constructor(){\n        super()\n\n        // 第一种初始化方式\n        this.state = {\n            count : 0\n        }\n    }\n    // 第二种初始化方式\n    state = {\n        count:1\n    }\n    render(){\n        return (\n            <div>计数器 :{this.state.count}</div>\n        )\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"setstate-修改状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstate-修改状态"}},[s._v("#")]),s._v(" setState() 修改状态")]),s._v(" "),a("ul",[a("li",[s._v("状态是可变的")]),s._v(" "),a("li",[s._v("语法：this.setState({要修改的数据})")]),s._v(" "),a("li",[a("strong",[s._v("注意：不要直接修改state中的值，这是错误的")])]),s._v(" "),a("li",[s._v("setState() 作用：1.修改 state 2.更新UI")]),s._v(" "),a("li",[s._v("思想：数据驱动视图")])]),s._v(" "),a("h4",{attrs:{id:"示例demo-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例demo-7"}},[s._v("#")]),s._v(" 示例demo")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default class extends React.Component {\n    // 第二种初始化方式\n    state = {\n        count:1\n    }\n    render(){\n        return (\n            <div>\n                <div>计数器 :{this.state.count}</div>\n                <button onClick={() => {\n                     this.setState({\n            \t \t\tcount: this.state.count+1\n           \t\t\t  })   \n                }}>+1</button>\n            </div>\n        )\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h4",{attrs:{id:"小结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("ul",[a("li",[s._v("修改state里面的值我们需要通过 this.setState() 来进行修改")]),s._v(" "),a("li",[s._v("React底层会有监听，一旦我们调用了setState导致了数据的变化，就会重新调用一次render方法，重新渲染当前组件")])]),s._v(" "),a("h2",{attrs:{id:"事件绑定this指向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定this指向"}},[s._v("#")]),s._v(" 事件绑定this指向")]),s._v(" "),a("h3",{attrs:{id:"箭头函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[s._v("#")]),s._v(" 箭头函数")]),s._v(" "),a("ul",[a("li",[s._v("利用箭头函数自身不绑定this的特点")])]),s._v(" "),a("h3",{attrs:{id:"利用bind方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用bind方法"}},[s._v("#")]),s._v(" 利用bind方法")]),s._v(" "),a("p",[s._v("利用原型bind方法是可以更改函数里面this的指向的，所以我们可以在构造中调用bind方法，然后把返回的值赋值给我们的函数即可")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class App extends React.Component {\n  constructor() {\n    super()\n\t...\n    // 通过bind方法改变了当前函数中this的指向\n    this.onIncrement = this.onIncrement.bind(this)\n  }\n  // 事件处理程序\n  onIncrement() {\n    ...\n  }\n\n  render() {\n    ...\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"class的实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class的实例方法"}},[s._v("#")]),s._v(" class的实例方法")]),s._v(" "),a("ul",[a("li",[s._v("利用箭头函数形式的class实例方法")]),s._v(" "),a("li",[s._v("注意：该语法是实验性语法，但是，由于babel的存在可以使用")])]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  // 事件处理程序\n  onIncrement = () => {\n    console.log('事件处理程序中的this：', this)\n    this.setState({\n      count: this.state.count + 1\n    })\n  }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"小结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("ul",[a("li",[s._v("推荐：使用class的实例方法，也是依赖箭头函数不绑定this的原因")])])])}),[],!1,null,null,null);a.default=n.exports}}]);